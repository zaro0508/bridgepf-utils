{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "BridgePF Cloudformation",
  "Mappings": {
    "AWSLoadbalancerAccount": {
      "us-east-1": {"ARN": "127311923021"},
      "us-west-2": {"ARN": "797873946194"},
      "us-west-1": {"ARN": "027434742980"},
      "eu-west-1": {"ARN": "156460612806"},
      "eu-central-1": {"ARN": "054676820928"},
      "ap-southeast-1": {"ARN": "114774131450"},
      "ap-northeast-1": {"ARN": "582318560864"},
      "ap-southeast-2": {"ARN": "783225319266"},
      "ap-northeast-2": {"ARN": "600734575887"},
      "sa-east-1": {"ARN": "507241528517"}
    }
  },
  "Metadata": {
    "AWS::CloudFormation::Interface" : {
      "ParameterGroups" : [
        {
          "Label" : { "default" : "App Deployment Settings" },
          "Parameters" : [
            "EC2KeyName",
            "ElasticCacheInstanceType",
            "AppDeployBucket",
            "AppDeployFile",
            "EC2InstanceType",
            "SSLCertArn",
            "DNSHostname",
            "DNSDomain"
          ]
        },
        {
          "Label" : { "default" : "Bridge Env Settings" },
          "Parameters" : [
            "BridgeEnv",
            "BridgeUser"
          ]
        },
        {
          "Label" : { "default" : "Bridge Server Keys" },
          "Parameters" : [
            "AwsKey",
            "AwsSecretKey",
            "AwsKeyUpload",
            "AwsSecretKeyUpload",
            "AwsKeyUploadCms",
            "AwsSecretKeyUploadCms",
            "AwsSnsKey",
            "AwsSnsSecretKey",
            "BridgeHealthcodeKey",
            "BridgeHealthcodeRedisKey"
          ]
        },
        {
          "Label" : { "default" : "Stormpath Settings" },
          "Parameters" : [
            "EnterpriseStormpathHref",
            "EnterpriseStormpathId",
            "EnterpriseStormpathSecret"
          ]
        },
        {
          "Label": { "default" : "Bridge Server S3 buckets, will default to appropriate buckets for env if left blank"},
          "Parameters": [
            "UploadBucket",
            "AttachmentBucket",
            "UploadCMSCertBucket",
            "UploadCMSPrivBucket",
            "ConsentsBucket",
            "HostPostfix"
          ]
        },
        {
          "Label": { "default" : "Web Interface Settings"},
          "Parameters": [
            "WebservicesUrl"
          ]
        },
        {
          "Label" : { "default" : "Bridge Server Config File Settings, empty settings will not be set, defaulting to conf/bridge-server.conf" },
          "Parameters" : [
            "AdminEmail",
            "AdminPassword",
            "AsyncWorkerThreadCount",

            "DDBMaxRetries",

            "FphsIdAddLimit",
            "ExternalIdAddLimit",

            "UddSqsQueueUrl",
            "StudyWhitelist",

            "EmailUnsubscribeToken",

            "ExporterSynapseId",

            "ExternalIdLockDuration",

            "MaxNumZipEntries",
            "ZipEntrySize",

            "Route53Zone",

            "SupportEmail",
            "SynapseApiKey",
            "SynapseUser",
            "SysopsEmail",

            "TestSynapseUserId"
          ]
        },
        {
          "Label": {"default": "Redis Client Tuning, empty settings will not be set, defaulting to conf/bridge-server.conf "},
          "Parameters": [
            "RedisMaxTotal",
            "RedisMinIdle",
            "RedisMaxIdle",
            "RedisTimeout"
          ]
        }
      ]
    }
  },
  "Conditions": {

  },
  "Parameters": {
    "EC2KeyName": {
      "Description": "The EC2 Key Pair to allow SSH access to appservers",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "must be the name of an existing EC2 KeyPair.",
      "Default": "BridgePF-AWS-Dev"
    },
    "SSLCertArn": {
      "Description": "SSL certificate for load balancer",
      "Type": "String",
      "Default": "arn:aws:acm:us-east-1:649232250620:certificate/2738846d-b6ad-4b5b-a956-0db9ba4509ac"
    },
    "BridgeEnv": {
      "Type": "String",
      "Default": "dev"
    },
    "BridgeUser": {
      "Type": "String",
      "Default": "heroku"
    },
    "ElasticCacheInstanceType": {
      "Type": "String",
      "Description": "Instance type to use for Elastic Cache cluster",
      "Default": "cache.t2.micro",
      "AllowedValues": [
        "cache.t2.micro",
        "cache.t2.small",
        "cache.t2.medium",
        "cache.m3.medium",
        "cache.m3.large",
        "cache.m3.xlarge",
        "cache.m3.2xlarge",
        "cache.r3.large",
        "cache.r3.xlarge",
        "cache.r3.2xlarge",
        "cache.r3.4xlarge",
        "cache.r3.8xlarge"
      ]
    },
    "EC2InstanceType": {
      "Type": "String",
      "Description": "Instance type to use for Elastic Beanstalk Instances",
      "Default": "t2.small",
      "AllowedValues": [
        "t1.micro",
        "t2.nano",
        "t2.micro",
        "t2.small",
        "t2.medium",
        "t2.large",
        "t2.xlarge",
        "t2.2xlarge",
        "m1.small",
        "m1.medium",
        "m1.large",
        "m1.xlarge",
        "m3.medium",
        "m3.large",
        "m3.xlarge",
        "m3.2xlarge",
        "m4.large",
        "m4.xlarge",
        "m4.2xlarge",
        "m4.4xlarge",
        "m4.10xlarge",
        "m4.16xlarge",
        "m2.xlarge",
        "m2.2xlarge",
        "m2.4xlarge",
        "cr1.8xlarge",
        "r3.large",
        "r3.xlarge",
        "r3.2xlarge",
        "r3.4xlarge",
        "r3.8xlarge",
        "r4.large",
        "r4.xlarge",
        "r4.2xlarge",
        "r4.4xlarge",
        "r4.8xlarge",
        "r4.16xlarge",
        "x1.16xlarge",
        "x1.32xlarge",
        "i2.xlarge",
        "i2.2xlarge",
        "i2.4xlarge",
        "i2.8xlarge",
        "hi1.4xlarge",
        "hs1.8xlarge",
        "c1.medium",
        "c1.xlarge",
        "c3.large",
        "c3.xlarge",
        "c3.2xlarge",
        "c3.4xlarge",
        "c3.8xlarge",
        "c4.large",
        "c4.xlarge",
        "c4.2xlarge",
        "c4.4xlarge",
        "c4.8xlarge",
        "cc1.4xlarge",
        "cc2.8xlarge",
        "g2.2xlarge",
        "g2.8xlarge",
        "cg1.4xlarge",
        "p2.xlarge",
        "p2.8xlarge",
        "p2.16xlarge",
        "d2.xlarge",
        "d2.2xlarge",
        "d2.4xlarge",
        "d2.8xlarge",
        "f1.2xlarge",
        "f1.16xlarge"
      ]
    },
    "AppDeployBucket": {
      "Type": "String",
      "Description": "S3 bucket for deployment",
      "Default": "org-sagebridge-deployment-dev"
    },
    "AppDeployFile": {
      "Type": "String",
      "Description": "Initial file to deploy to elastic beanstalk from s3 bucket",
      "Default": "bridgepf-0.1-SNAPSHOT.zip"
    },

    "DNSHostname": {
      "Type": "String",
      "Description": "DNS Hostname for deployment",
      "Default": "dev"
    },
    "DNSDomain": {
      "Type": "String",
      "Description": "DNS Domain name for deployment",
      "Default": "sagebridge.org"
    },

    "UploadBucket": {
      "Type": "String",
      "Default": "org-sagebridge-upload-dev"
    },
    "AttachmentBucket": {
      "Type": "String",
      "Default": "org-sagebridge-attachment-dev"
    },
    "UploadCMSCertBucket": {
      "Type": "String",
      "Default": "org-sagebridge-upload-cms-cert-dev"
    },
    "UploadCMSPrivBucket": {
      "Type": "String",
      "Default": "org-sagebridge-upload-cms-priv-dev"
    },
    "ConsentsBucket": {
      "Type": "String",
      "Default": "org-sagebridge-consents-dev"
    },

    "AdminEmail": {
      "Type": "String",
      "Default": "SECRET"
    },
    "AdminPassword": {
      "Type": "String",
      "NoEcho": true,
      "Default": "SECRET"
    },
    "AsyncWorkerThreadCount": {
      "Type": "String",
      "Default": "20"
    },

    "AwsKey": {
      "Type": "String",
      "Default": "SECRET"
    },
    "AwsSecretKey": {
      "Type": "String",
      "Default": "SECRET",
      "NoEcho": true
    },
    "AwsKeyUpload": {
      "Type": "String",
      "Default": "SECRET"
    },
    "AwsSecretKeyUpload": {
      "Type": "String",
      "Default": "SECRET",
      "NoEcho": true
    },
    "AwsKeyUploadCms": {
      "Type": "String",
      "Default": "SECRET"
    },
    "AwsSecretKeyUploadCms": {
      "Type": "String",
      "Default": "SECRET",
      "NoEcho": true
    },

    "EnterpriseStormpathHref": {
      "Type": "String",
      "Default": "SECRET"
    },
    "EnterpriseStormpathId": {
      "Type": "String",
      "Default": "SECRET"
    },
    "EnterpriseStormpathSecret": {
      "Type": "String",
      "Default": "SECRET",
      "NoEcho": true
    },

    "BridgeHealthcodeKey": {
      "Type": "String",
      "Default": "SECRET",
      "NoEcho": true
    },
    "BridgeHealthcodeRedisKey": {
      "Type": "String",
      "Default": "SECRET",
      "NoEcho": true
    },

    "WebservicesUrl": {
      "Type": "String",
      "Default": "https://dev.sagebridge.org"
    },
    "HostPostfix": {
      "Type": "String",
      "Default": "-dev.sagebridge.org"
    },
    "DDBMaxRetries": {
      "Type": "String",
      "Default": "1"
    },
    "FphsIdAddLimit": {
      "Type": "String",
      "Default": "10"
    },

    "ExternalIdAddLimit": {
      "Type": "String",
      "Default": "10"
    },
    "UddSqsQueueUrl": {
      "Type": "String",
      "Default": "https://sqs.us-east-1.amazonaws.com/649232250620/Bridge-WorkerPlatform-Request-dev"
    },
    "StudyWhitelist": {
      "Type": "String",
      "Default": "api"
    },
    "EmailUnsubscribeToken": {
      "Type": "String",
      "Default": "dummy-value"
    },
    "ExporterSynapseId": {
      "Type": "String",
      "Default": "3325672"
    },

    "ExternalIdLockDuration": {
      "Type": "String",
      "Default": "30000"
    },
    "MaxNumZipEntries": {
      "Type": "String",
      "Default": "100"
    },
    "ZipEntrySize": {
      "Type": "String",
      "Default": "25000000"
    },
    "RedisMaxTotal": {
      "Type": "String",
      "Default": "50"
    },
    "RedisMinIdle": {
      "Type": "String",
      "Default": "3"
    },
    "RedisMaxIdle": {
      "Type": "String",
      "Default": "50"
    },
    "RedisTimeout": {
      "Type": "String",
      "Default": "2000"
    },
    "Route53Zone": {
      "Type": "String",
      "Default": "ZP0HNVK1V670D"
    },
    "AwsSnsKey": {
      "Type": "String",
      "Default": "SECRET"
    },
    "AwsSnsSecretKey": {
      "Type": "String",
      "NoEcho": true,
      "Default": "SECRET"
    },
    "SupportEmail": {
      "Type": "String",
      "Default": "Bridge (Sage Bionetworks) <support@sagebridge.org>"
    },
    "SynapseApiKey": {
      "Type": "String",
      "Default": "SECRET"
    },
    "SynapseUser": {
      "Type": "String",
      "Default": "SECRET"
    },
    "SysopsEmail": {
      "Type": "String",
      "Default": "Bridge IT <bridge-testing+sysops@sagebase.org>"
    },
    "TestSynapseUserId": {
      "Type": "String",
      "Default": "3348228"
    }
  },
  "Resources": {
    "DDBPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": "dynamodb:*",
              "Resource": "*"
            }
          ]
        },
        "PolicyName": "DynamoAccessPolicy",
        "Roles": [
          {
            "Ref": "AppserverRole"
          }
        ]
      }
    },
    "S3Policy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": "s3:*",
              "Resource": [
                {
                  "Fn::Join": ["",
                  [
                    "arn:aws:s3:::",
                    {"Ref":"AttachmentBucket"}
                  ]]
                },
                {
                  "Fn::Join": ["",
                  [
                    "arn:aws:s3:::",
                    {"Ref":"UploadBucket"}
                  ]]
                },
                {
                  "Fn::Join": ["",
                  [
                    "arn:aws:s3:::",
                    {"Ref":"ConsentsBucket"}
                  ]]
                },
                {
                  "Fn::Join": ["",
                  [
                    "arn:aws:s3:::",
                    {"Ref":"UploadCMSCertBucket"}
                  ]]
                },
                {
                  "Fn::Join": ["",
                  [
                    "arn:aws:s3:::",
                    {"Ref":"UploadCMSPrivBucket"}
                  ]]
                },
                {
                  "Fn::Join": ["",
                  [
                    "arn:aws:s3:::",
                    {"Ref":"AppDeployBucket"}
                  ]]

                },
                {
                  "Fn::Join": ["",
                  [
                    "arn:aws:s3:::",
                    {"Ref":"AttachmentBucket"}, "/*"
                  ]]
                },
                {
                  "Fn::Join": ["",
                  [
                    "arn:aws:s3:::",
                    {"Ref":"UploadBucket"}, "/*"

                  ]]
                },
                {
                  "Fn::Join": ["",
                  [
                    "arn:aws:s3:::",
                    {"Ref":"ConsentsBucket"}, "/*"
                  ]]
                },
                {
                  "Fn::Join": ["",
                  [
                    "arn:aws:s3:::",
                    {"Ref":"UploadCMSCertBucket"}, "/*"
                  ]]
                },
                {
                  "Fn::Join": ["",
                  [
                    "arn:aws:s3:::",
                    {"Ref":"UploadCMSPrivBucket"}, "/*"
                  ]]
                },
                {
                  "Fn::Join": ["",
                  [
                    "arn:aws:s3:::",
                    {"Ref":"AppDeployBucket"}, "/*"
                  ]]

                }
              ]
            }
          ]
        },
        "PolicyName": "AppS3AccessPolicy",
        "Roles": [
          {
            "Ref": "AppserverRole"
          }
        ]
      }
    },
    "SnsAccessPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "sns:*"
              ],
              "Resource": "*"
            }
          ]
        },
        "PolicyName": "AllowSNSAccess",
        "Roles": [
          {
            "Ref": "AppserverRole"
          }
        ]
      }
    },
    "Ec2PullPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "ec2:DescribeInstances"
              ],
              "Resource": "*"
            }
          ]
        },
        "PolicyName": "AllowEC2Pull",
        "Roles": [
          {
            "Ref": "AppserverRole"
          }
        ]
      }
    },
    "CloudwatchLogsPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:GetLogEvents",
                "logs:PutLogEvents",
                "logs:DescribeLogGroups",
                "logs:DescribeLogStreams",
                "logs:PutRetentionPolicy"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:logs:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":*:*"
                    ]
                  ]
                }
              ]
            }
          ]
        },
        "PolicyName": "AllowCWLogsPull",
        "Roles": [
          {
            "Ref": "AppserverRole"
          }
        ]
      }
    },
    "AppserverRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/"
      }
    },
    "AppserverInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "AppserverRole"
          }
        ]
      }
    },
    "ECSecurityGroup": {
      "Type": "AWS::ElastiCache::SecurityGroup",
      "Properties": {
        "Description": "Elasticache Security Group"
      }
    },
    "ECSecurityGroupIngress": {
      "Type": "AWS::ElastiCache::SecurityGroupIngress",
      "Properties": {
        "CacheSecurityGroupName": {"Ref": "ECSecurityGroup"},
        "EC2SecurityGroupName": {"Ref": "BridgeAppServers"},
        "EC2SecurityGroupOwnerId": {"Ref": "AWS::AccountId"}
      }
    },

    "AppDNS": {
      "Type" : "AWS::Route53::RecordSet",
      "Properties" : {
         "HostedZoneName" : { "Fn::Join": ["", [{"Ref": "DNSDomain"}, "."]]},
         "Comment" : { "Fn::Join": [" ", [ "BridgePF", {"Ref": "BridgeEnv"}, {"Ref": "BridgeUser"}, "stack" ]]},
         "Name" : { "Fn::Join" : [ "", [ { "Ref": "DNSHostname" }, ".", {"Ref": "DNSDomain"}, "." ]]},
         "Type" : "CNAME",
         "TTL" : "900",
         "ResourceRecords" : [
            { "Fn::GetAtt" : [ "BridgeEnvironment", "EndpointURL" ]}
         ]
      }
    },
    "ECCluster": {
      "Type": "AWS::ElastiCache::CacheCluster",
      "Properties": {
        "AutoMinorVersionUpgrade": "true",
        "Engine": "redis",
        "CacheNodeType": {
          "Ref": "ElasticCacheInstanceType"
        },
        "NumCacheNodes": "1",
        "CacheSecurityGroupNames": [{"Ref": "ECSecurityGroup"}]
      },
      "DependsOn": "ECSecurityGroup"
    },

    "BridgeAppServers": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Security group for appserver instances",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },

    "BridgeApplication": {
      "Type": "AWS::ElasticBeanstalk::Application",
      "Properties": {
        "ApplicationName": {
          "Fn::Join": [
            "-",
            [
              "BridgePF",
              {
                "Ref": "BridgeUser"
              },
              {
                "Ref": "BridgeEnv"
              }
            ]
          ]
        },
        "Description": {
          "Fn::Join": [
            " ",
            [
              "Bridge PF Application:",
              {
                "Ref": "BridgeUser"
              },
              {
                "Ref": "BridgeEnv"
              }
            ]
          ]
        }
      }
    },
    "BridgeConfigurationTemplate": {
      "Type": "AWS::ElasticBeanstalk::ConfigurationTemplate",
      "Properties": {
        "ApplicationName": { "Ref": "BridgeApplication" },
        "Description": "AWS ElasticBeanstalk BridgePF Configuration Template",
        "OptionSettings": [
          {
            "Namespace": "aws:autoscaling:asg",
            "OptionName": "MinSize",
            "Value": "1"
          },
          {
            "Namespace": "aws:autoscaling:asg",
            "OptionName": "MaxSize",
            "Value": "3"
          },
          {
            "Namespace": "aws:autoscaling:launchconfiguration",
            "OptionName": "IamInstanceProfile",
            "Value": {"Ref": "AppserverInstanceProfile"}
          },
          {
            "Namespace": "aws:autoscaling:launchconfiguration",
            "OptionName": "InstanceType",
            "Value": {"Ref": "EC2InstanceType"}
          },
          {
            "Namespace": "aws:elasticbeanstalk:environment",
            "OptionName": "EnvironmentType",
            "Value": "LoadBalanced"
          },
          {
            "Namespace": "aws:elb:listener:443",
            "OptionName": "ListenerProtocol",
            "Value": "HTTPS"
          },
          {
            "Namespace": "aws:elb:listener:443",
            "OptionName": "InstanceProtocol",
            "Value": "HTTP"
          },
          {
            "Namespace": "aws:elb:listener:443",
            "OptionName": "InstancePort",
            "Value": "80"
          },
          {
            "Namespace": "aws:elasticbeanstalk:cloudwatch:logs",
            "OptionName": "StreamLogs",
            "Value": "true"
          },
          {
            "Namespace": "aws:elasticbeanstalk:cloudwatch:logs",
            "OptionName": "DeleteOnTerminate",
            "Value": "true"
          },
          {
            "Namespace": "aws:elasticbeanstalk:cloudwatch:logs",
            "OptionName": "RetentionInDays",
            "Value": "30"
          },
          {
            "Namespace": "aws:elb:listener:443",
            "OptionName": "SSLCertificateId",
            "Value": { "Ref": "SSLCertArn" }
          },

          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "BRIDGE_ENV",
            "Value" : { "Ref" : "BridgeEnv" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "BRIDGE_USER",
            "Value" : { "Ref" : "BridgeUser" }
          },

          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "ADMIN_EMAIL",
            "Value" : { "Ref" : "AdminEmail" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "ADMIN_PASSWORD",
            "Value" : { "Ref" : "AdminPassword" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "ASYNC_WORKER_THREAD_COUNT",
            "Value" : { "Ref" : "AsyncWorkerThreadCount" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "AWS_KEY",
            "Value" : { "Ref" : "AwsKey" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "AWS_SECRET_KEY",
            "Value" : { "Ref" : "AwsSecretKey" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "AWS_KEY_UPLOAD",
            "Value" : { "Ref" : "AwsKeyUpload" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "AWS_SECRET_KEY_UPLOAD",
            "Value" : { "Ref" : "AwsSecretKeyUpload" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "AWS_KEY_UPLOAD_CMS",
            "Value" : { "Ref" : "AwsKeyUploadCms" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "AWS_SECRET_KEY_UPLOAD_CMS",
            "Value" : { "Ref" : "AwsSecretKeyUploadCms" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "BRIDGE_HEALTHCODE_KEY",
            "Value" : { "Ref" : "BridgeHealthcodeKey" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "BRIDGE_HEALTHCODE_REDIS_KEY",
            "Value" : { "Ref" : "BridgeHealthcodeRedisKey" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "DDB_MAX_RETRIES",
            "Value" : { "Ref" : "DDBMaxRetries" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "FPHS_ID_ADD_LIMIT",
            "Value" : { "Ref" : "FphsIdAddLimit" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "EXTERNAL_ID_ADD_LIMIT",
            "Value" : { "Ref" : "ExternalIdAddLimit" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "HOST_POSTFIX",
            "Value" : { "Ref" : "HostPostfix" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "WEBSERVICES_URL",
            "Value" : { "Ref" : "WebservicesUrl" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "UPLOAD_BUCKET",
            "Value" : { "Ref" : "UploadBucket" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "ATTACHMENT_BUCKET",
            "Value" : { "Ref" : "AttachmentBucket" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "UPLOAD_CMS_CERT_BUCKET",
            "Value" : { "Ref" : "UploadCMSCertBucket" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "UPLOAD_CMS_PRIV_BUCKET",
            "Value" : { "Ref" : "UploadCMSPrivBucket" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "CONSENTS_BUCKET",
            "Value" : { "Ref" : "ConsentsBucket" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "UDD_SQS_QUEUE_URL",
            "Value" : { "Ref" : "UddSqsQueueUrl" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "STUDY_WHITELIST",
            "Value" : { "Ref" : "StudyWhitelist" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "EMAIL_UNSUBSCRIBE_TOKEN",
            "Value" : { "Ref" : "EmailUnsubscribeToken" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "ENTERPRISE_STORMPATH_APPLICATION_HREF",
            "Value" : { "Ref" : "EnterpriseStormpathHref" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "ENTERPRISE_STORMPATH_ID",
            "Value" : { "Ref" : "EnterpriseStormpathId" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "ENTERPRISE_STORMPATH_SECRET",
            "Value" : { "Ref" : "EnterpriseStormpathSecret" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "EXPORTER_SYNAPSE_ID",
            "Value" : { "Ref" : "ExporterSynapseId" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "EXTERNAL_ID_LOCK_DURATION",
            "Value" : { "Ref" : "ExternalIdLockDuration" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "MAX_NUM_ZIP_ENTRIES",
            "Value" : { "Ref" : "MaxNumZipEntries" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "MAX_NUM_ENTRY_SIZE",
            "Value" : { "Ref" : "ZipEntrySize" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "REDIS_MAX_TOTAL",
            "Value" : { "Ref" : "RedisMaxTotal" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "REDIS_MIN_IDLE",
            "Value" : { "Ref" : "RedisMinIdle" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "REDIS_MAX_IDLE",
            "Value" : { "Ref" : "RedisMaxIdle" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "REDIS_TIMEOUT",
            "Value" : { "Ref" : "RedisTimeout" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "REDIS_URL",
            "Value" : {"Fn::Join": ["",
              [
                "redis://AWS:AWS@",
                {"Fn::GetAtt": ["ECCluster", "RedisEndpoint.Address"]},
                ":",
                {"Fn::GetAtt": ["ECCluster", "RedisEndpoint.Port"]}
              ]]}
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "ROUTE53_ZONE",
            "Value" : { "Ref" : "Route53Zone" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "SNS_KEY",
            "Value" : { "Ref" : "AwsSnsKey" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "SNS_SECRET_KEY",
            "Value" : { "Ref" : "AwsSnsSecretKey" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "SUPPORT_EMAIL",
            "Value" : { "Ref" : "SupportEmail" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "SYNAPSE_API_KEY",
            "Value" : { "Ref" : "SynapseApiKey" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "SYNAPSE_USER",
            "Value" : { "Ref" : "SynapseUser" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "SYSOPS_EMAIL",
            "Value" : { "Ref" : "SysopsEmail" }
          },
          {
            "Namespace" : "aws:elasticbeanstalk:application:environment",
            "OptionName" : "TEST_SYNAPSE_USER_ID",
            "Value" : { "Ref" : "TestSynapseUserId" }
          }
        ],
        "SolutionStackName": "64bit Amazon Linux 2016.09 v2.4.4 running Java 8"
      }
    },
    "BridgeApplicationVersion": {
      "Type": "AWS::ElasticBeanstalk::ApplicationVersion",
      "Properties": {
        "ApplicationName": {"Ref": "BridgeApplication"},
        "Description": "Initial Application Version",
        "SourceBundle": {
          "S3Bucket": { "Ref": "AppDeployBucket"},
          "S3Key": {"Ref": "AppDeployFile"}
        }
      }
    },
    "BridgeEnvironment": {
      "Type": "AWS::ElasticBeanstalk::Environment",
      "Properties": {
        "ApplicationName": { "Ref": "BridgeApplication" },
        "Description": "AWS ElasticBeanstalk BridgePF Environment",
        "TemplateName": { "Ref": "BridgeConfigurationTemplate" },
        "VersionLabel": { "Ref": "BridgeApplicationVersion" },
        "OptionSettings": [
          {
            "Namespace": "aws:autoscaling:launchconfiguration",
            "OptionName": "EC2KeyName",
            "Value": {"Ref": "EC2KeyName"}
          },
          {
            "Namespace": "aws:autoscaling:launchconfiguration",
            "OptionName": "SecurityGroups",
            "Value": { "Ref": "BridgeAppServers" }
          }
        ]
      }
    }
  },
  "Outputs" : {
    "ElasticBeanstalkEnvironment" : {
      "Description": "Environment string of EB to deploy into",
      "Value" : { "Ref" : "BridgeEnvironment"}
    }
  }
}
